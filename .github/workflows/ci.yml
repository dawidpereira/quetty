name: CI

on:
  push:
    branches: [ "main" ]
    paths:
      - 'server/**'
      - 'ui/**'
      - 'Cargo.*'
      - 'config.default.toml'
      - 'keys.default.toml'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'server/**'
      - 'ui/**'
      - 'Cargo.*'
      - 'config.default.toml'
      - 'keys.default.toml'
      - '.github/workflows/ci.yml'

jobs:
  # Fast checks that don't need compilation
  lint-format:
    name: "Format Check"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: |
            rustfmt
      - name: Check formatting
        run: cargo fmt --check

  # Build and test together for resource efficiency
  build-and-test:
    name: "Build & Test"
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      CARGO_INCREMENTAL: 0
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: |
            clippy

      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Cache Cargo dependencies
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "unified-cache"

      # Single build for both test and clippy
      - name: Build workspace
        run: cargo build --verbose

      - name: Copy default config files for tests
        run: |
          cp config.default.toml config.toml
          cp keys.default.toml keys.toml

      - name: Run tests (excluding doc tests)
        run: cargo test --verbose --lib --bins --tests

      - name: Run Clippy (reuses build artifacts)
        run: cargo clippy --workspace --all-features -- -D warnings
